import java.util.Random;

//매개변수 있음 반환값없음
@FunctionalInterface
interface StringConcat{
	public void makeString(String s1, String s2);
}

//매개변수 없고 반환값있음
@FunctionalInterface
interface RandomNumber{
	public int randomNum();
}

//매개변수 있고 반환값있음
@FunctionalInterface
interface GugudanRange{
	public String [][] guguString(int n1, int n2);
}

//매개변수 없고 반환값도 없음
@FunctionalInterface
interface MenuPrint{
	public void onlyPrint();
}

public class Ex05ParamNReturn 
{
	public static void main(String[] args)
	{
		System.out.println("### 람다식1");
		String s1 = "안녕하세요?";
		String s2 = "람다식입니다.";
		
		StringConcat sc = (a,b) ->{
			System.out.println(a + " " + b);
		};
		sc.makeString(s1, s2);
		
		System.out.println("### 람다식2");
		
		RandomNumber randomNumber = () -> {
			Random random = new Random();
			return random.nextInt(100);
		};
		//반환값이 있으므로 좌측항의 변수로 활당된다
		int rNumber = randomNumber.randomNum();
		System.out.println("생성된 난수:" + rNumber);
		
		System.out.println("### 람다식3");
		GugudanRange gugudanRange = (num1, num2) ->{
			//2차원배열을 선언한 후 구구단을 각 원소에 삽입한다
			String[][] gugudan = new String[9][9];
			//num1단에서 num2단까지만 반복
			for (int i = num1; i <=num2; i++)
			{
				for (int j = 1; j <= 9; j++)
				{
					gugudan[i-1][j-1] = i+"*"+j+"="+(i*j);
				}
			}
			//배열의 참조값이 반환된다.
			return gugudan;
		};
		String[][] returnStr = gugudanRange.guguString(4, 6);
		for (int i = 4; i <=6; i++)
		{
			for (int j = 1; j <= 9; j++)
			{
				System.out.print(returnStr[i-1][j-1]+" ");
			}
			System.out.println();
		}
		
		//단순히 문자열만 출력하는 람다식을 정의한다.
		System.out.println("### 람다식4");
		MenuPrint menuPrint = () -> {
			System.out.println("메뉴를 출력합니다");
		};
		menuPrint.onlyPrint();
		
	}
}
